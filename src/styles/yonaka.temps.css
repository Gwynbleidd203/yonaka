@import "node_modules/normalize.css/normalize.css";
html {
  color-scheme: dark light;
}

@media (prefers-color-scheme: light) {
  :root {
    --text: #030217;
    --background: #e9e8fd;
    --primary: #47465d;
    --secondary: #16161d;
    --accent: #6e6e91;
  }
}
[data-theme=light] {
  --text: #030217;
  --background: #e9e8fd;
  --primary: #47465d;
  --secondary: #16161d;
  --accent: #6e6e91;
}

body {
  font-family: var(--font-family);
  font-weight: var(--font-weight);
  line-height: var(--line-height);
}

h1 {
  --text-color: var(--accent);
  color: var(--text-color);
}

h1, h2, h3,
h4, h5, h6 {
  margin-bottom: var(--spacing);
}

:root {
  --roundness: auto;
  --spacing: .8rem;
  --spacing-y: auto;
  --spacing-x: auto;
  --jump: .4rem;
  --theme: dark;
  --width: unset;
  --height: unset;
  --xs: .4rem;
  --sm: .8rem;
  --md: 1.6rem;
  --lg: 3.2rem;
  --xl: 6.4rem;
  --hg: 12.8rem;
  --text: #e8e8ed;
  --background: #09090c;
  --primary: #47465d;
  --secondary: #16161d;
  --accent: #6f6e91;
  --muted-text: color-mix(in oklab, var(--text), black 70%) // Foreground Text
  --muted-secondary: color-mix(in oklab, var(--secondary), black 70%)
  // BREAKPOINTS
  --bp-sm: 40em;
  --bp-md: 48em;
  --bp-lg: 64em;
  --bp-hg: 80em;
  --spacing: .4rem;
  --grid-cols: auto-fill;
  --grid-rows: auto;
  --grid-item-width: 10rem;
  --grid-justify-items: start;
  --padding: var(--sm);
  --roundness: var(--xs);
  --font-family: system-ui, "Inter", "Roboto";
  --font-weight: 400;
  --font-size: 1.6rem;
  --line-height: 1.15;
  --transition: .4s ease;
  --bg: inherit;
  --txt-color: inherit;
}

body {
  --bg: var(--background);
  --spacing: var(--md);
  display: grid;
  place-items: center;
  min-height: 100vh;
  gap: var(--xs);
  background-color: var(--bg);
}
body :where(nav, header, footer) {
  --bg: var(--secondary);
  background-color: var(--bg);
}
body :where(section, div) {
  --bg: var(--secondary);
  background-color: var(--bg);
  margin-block: var(--spacing);
  padding: var(--spacing);
}
body * :not(h1) {
  --txt: var(--text);
  color: var(--txt);
  border-radius: var(--roundness);
}

a:not([role=img]) {
  --txt-color: var(--accent);
  width: fit-content;
  height: fit-content;
}
a:not([role=img]):visited, a:not([role=img]):link {
  color: var(--txt-color);
}

*,
*::before,
*::after {
  box-sizing: inherit;
  padding: 0;
  margin: 0;
  text-decoration: none;
}

html {
  font-size: 62.5%;
  line-height: 1.15;
  scroll-behavior: smooth;
}

body {
  box-sizing: border-box;
  font-size: var(--font-size);
}

img,
video,
svg {
  width: 100%;
  height: auto;
}

a {
  text-decoration: none;
}

ul,
ol {
  list-style: none;
}

button {
  --width: 16em;
  --spacing: var(--md) var(--hg);
  --roundness: .6vmin;
  text-align: center;
  width: var(--width);
  cursor: pointer;
  text-transform: uppercase;
  border: none;
  padding: var(--spacing);
  border-radius: var(--roundness);
  transition: background-color, transform var(--transition);
}
button.cta {
  --bg: var(--accent);
  background-color: var(--bg);
}
button.cta:hover {
  background-color: color-mix(in oklab, var(--bg), white 20%);
  transform: translateY(2%);
}
button.cta:active {
  background-color: color-mix(in oklab, var(--bg), white 10%);
  transform: translateY(8%);
}

dl {
  --bg: var(--primary);
  --spacing: var(--lg);
  --width: 100%;
  --height: fit-content;
  --font-size: 1.75rem;
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: space-between;
  width: var(--width);
  height: var(--height);
  gap: var(--spacing);
  font-size: var(--font-size);
}
dl dt, dl dd {
  padding: var(--spacing);
  background-color: var(--bg);
  width: var(--width);
}
dl dt:not([open]) + dd {
  visibility: hidden;
  display: none;
}
dl dt:active, dl dt:focus {
  background-color: red;
}

input, label {
  transition: background-color var(--transition);
}

label {
  cursor: pointer;
  --spacing-y: var(--xs);
  --spacing-x: var(--md);
}

label:has(> input[type=file]) {
  display: flex;
  border: 0.1rem dashed var(--text);
  width: 100%;
  height: 20vh;
  padding: var(--spacing-y) var(--spacing-x);
  text-align: center;
}
label:has(> input[type=file]):hover {
  background-color: var(--accent);
}

input[type=file] {
  visibility: hidden;
  width: 0;
  height: 0;
}

.logo {
  --roundness: .4vmin;
  border-radius: var(--roundness);
  width: 8vmin;
  aspect-ratio: 1/1;
  object-fit: cover;
  object-position: center;
  margin: var(--spacing);
}

footer {
  --width: 100%;
  --height: 35vmin;
  color: color-mix(in oklab, var(--text-color) 90%, black 10%);
  align-self: flex-end;
  display: grid;
  place-items: center;
  width: var(--width);
  height: var(--height);
}
footer ul {
  display: flex;
  align-items: center;
  justify-content: center;
}
footer ul a {
  --txt: var(--secondary);
}

header {
  --widht: 100%;
  --height: 10vmin;
  min-width: var(--widht);
  height: var(--height);
  align-items: center;
  display: flex;
  justify-content: space-around;
  gap: var(--spacing);
  align-self: self-start;
}

main {
  --width: 90%;
  --height: auto;
  --spacing: var(--lg);
  width: clamp(60%, 75%, var(--width));
  height: var(--height);
  padding: var(--md) var(--lg);
  border-radius: var(--roundness);
  margin-block: var(--spacing);
}

nav {
  --font-size: 1.75rem;
  --bg: auto;
  background-color: var(--bg);
  width: clamp(30vmin, 40rem, 45%);
}
nav * {
  transition: opacity var(--transition);
}
nav ul {
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
}
nav ul li {
  width: fit-content;
  height: fit-content;
}
nav ul li a {
  font-size: var(--font-size);
}
nav ul li:hover a {
  opacity: 0.8;
}
nav ul li:active {
  opacity: 0.6;
}

.row {
  display: flex;
  flex-direction: row;
}

.col {
  display: flex;
  flex-direction: column;
}

.grid {
  --grid-cols: auto-fill;
  --grid-rows: fit-content;
  --grid-item-width: 10rem;
  --grid-justify-items: center;
  display: grid;
  grid-template-columns: repeat(var(--grid-cols), minmax(var(--grid-item-width), 1fr));
  grid-auto-rows: var(--grid-rows);
  justify-content: space-between;
  justify-items: var(--grid-justify-items);
  place-content: var(--grid-justify-items);
  gap: var(--spacing);
}
.grid > * {
  background-color: black;
  align-self: stretch;
  width: 100%;
}

.text-align-center {
  text-align: center;
}

.text-align-left {
  text-align: left;
}

.text-align-right {
  text-align: right;
}

.text-align-justify {
  text-align: justify;
}

.text-align-end {
  text-align: end;
}

.text-align-start {
  text-align: start;
}

/*# sourceMappingURL=yonaka.temps.css.map */
