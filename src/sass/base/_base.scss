$exclude-from-layout: ".hero, .wrapper, .hamburguer-icon";

// Styles the body, .app or #root (for react and other libs)

body, .app, #root {
    --bg: var(--background);
    --spacing: var(--md);

    display: grid;
    place-items: center;
    min-height: 100vh;
    //min-width: 750px;
    gap: var(--spacing);

    background-color: var(--bg);

    // Styles the Nav, Header, Main and Footer thar are direct children from the body. Excludes the hero.

    & > :where(nav, header, main, footer):not(.hero) {

        --bg: var(--background);
        background-color: var(--bg);
    }

    // Styles the div and section that are direct children from the main.

    & :where(main > section, div):not(#{$exclude-from-layout}) {
        --bg: var(--secondary);
        background-color: var(--bg);
        margin-block: var(--spacing);
        padding: var(--spacing);
    }

    & :where(main > section > :is(section, div)):not(#{$exclude-from-layout}) {

        --spacing: var(--md);

        margin-block: var(--spacing);
    }

    & * :where(:not(h1, p, span)){
        //--bg: var(--secondary);
        --txt: var(--text);
        color: var(--txt);
        border-radius: var(--roundness);
    }
}

:where(a:not([role="img"])) {

    --txt-color: var(--accent);
    width: fit-content;
    height: fit-content;

    &:is(:visited, :link) {
        color: var(--txt-color);
    }
}

// Basic Styling for forms

:where(form) {

    --spacing: inherit;

    display: grid;
    place-items: center;
    justify-items: stretch;
    gap: var(--spacing);
}

// Clean the code after a time to better perfomance and reading
// Low the specifity low as possible

// Defining the focus on all elements by default

:where(:focus-visible) {
    --outline: var(--outline-md);
    
    outline: var(--outline);
    outline-offset: var(--xs);
}

// EFFECTS 

:where(:is(button, summary, li):not(.disabled):active) {
    filter: var(--effect-bright);
}